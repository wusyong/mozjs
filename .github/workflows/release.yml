
name: Version Release Check

on:
  release:
    types: [published]
  workflow_call:
    inputs:
      release-tag:
        required: true
        type: string

env:
  RUST_BACKTRACE: 1
  SHELL: /bin/bash
  CARGO_INCREMENTAL: 0
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  REPO: ${{ github.repository_owner }}/mozjs
  MOZJS_ARCHIVE: libmozjs.tar.gz

jobs:
  release-tag:
    runs-on: ubuntu-latest
    steps:
      - id: tag-name
        run: |
          if [[ ${{ github.event_name }} == 'workflow_call' ]]; then
            echo "RELEASE_TAG=${{ inputs.release-tag }}" >> ${GITHUB_OUTPUT}
          elif [[ ${{ github.event_name }} == 'release' ]]; then
            echo "RELEASE_TAG=${{ github.ref_name }}" >> ${GITHUB_OUTPUT}
          fi
    outputs:
      release-tag: ${{ steps.tag-name.outputs.RELEASE_TAG }}

  mac:
    strategy:
      fail-fast: false
      matrix:
        features: ["--features streams"]
        platform:
          - { target: aarch64-apple-darwin, os: macos-14 }
          - { target: x86_64-apple-darwin, os: macos-13 }
    runs-on: ${{ matrix.platform.os }}
    needs: release-tag
    steps:
      - uses: actions/checkout@v4
      - name: Download prebuilt mozjs
        run: |
          curl -L https://github.com/${REPO}/releases/download/${{ needs.release-tag.outputs.release-tag }}/libmozjs-${{ matrix.platform.target }}.tar.gz -o libmozjs.tar.gz
      - name: Build
        run: |
          cargo build --verbose ${{ matrix.features }}
          cargo test --tests --examples --verbose ${{ matrix.features }}

  linux:
    runs-on: ubuntu-latest
    needs: release-tag
    strategy:
      fail-fast: false
      matrix:
        features: ["--features streams"]
    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@stable
      - name: Download prebuilt mozjs
        run: |
          curl -L https://github.com/${REPO}/releases/download/${{ needs.release-tag.outputs.release-tag }}/libmozjs-x86_64-unknown-linux-gnu.tar.gz -o libmozjs.tar.gz
      - name: Build
        run: |
          cargo build --verbose ${{ matrix.features }}
          cargo test --tests --examples --verbose ${{ matrix.features }}

  windows:
    runs-on: windows-latest
    needs: release-tag
    strategy:
      fail-fast: false
      matrix:
        features: ["--features streams"]
    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@stable
        with:
          targets: ${{ matrix.target }}
      - name: Download prebuilt mozjs
        run: |
          curl -L https://github.com/${{ github.repository_owner }}/mozjs/releases/download/${{ needs.release-tag.outputs.release-tag }}/libmozjs-x86_64-pc-windows-msvc.tar.gz -o libmozjs.tar.gz
      - name: Build Windows
        shell: cmd
        run: |
          cargo build --verbose ${{ matrix.features }}
          cargo test --tests --examples --verbose ${{ matrix.features }}

  build_result:
    name: Result
    runs-on: ubuntu-latest
    needs:
      ["linux", "mac", "windows"]
    if: ${{ always() }}
    steps:
      - name: Mark the job as successful
        if: ${{ !contains(needs.*.result, 'failure') && !contains(needs.*.result, 'cancelled') }}
        run: exit 0
      - name: Mark the job as unsuccessful
        if: ${{ contains(needs.*.result, 'failure') || contains(needs.*.result, 'cancelled') }}
        run: exit 1

