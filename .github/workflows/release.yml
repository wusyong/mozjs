
name: Version Release Check

on:
  pull_request:
  release:
    types: [published]

env:
  RUST_BACKTRACE: 1
  SHELL: /bin/bash
  CARGO_INCREMENTAL: 0
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  REPO: ${{ github.repository_owner }}/mozjs

jobs:
  mac:
    strategy:
      fail-fast: false
      matrix:
        features: ["--features streams"]
        platform:
          - { target: aarch64-apple-darwin, os: macos-14 }
          - { target: x86_64-apple-darwin, os: macos-13 }
    runs-on: ${{ matrix.platform.os }}
    env:
      RUSTC_WRAPPER: sccache
      CCACHE: sccache
      SCCACHE_GHA_ENABLED: "true"
    steps:
      - uses: actions/checkout@v4
      - name: Install deps
        run: |
          # Unlink and re-link to prevent errors when github mac runner images
          # https://github.com/actions/setup-python/issues/577
          brew list -1 | grep python | while read formula; do brew unlink $formula; brew link --overwrite $formula; done
          brew install llvm yasm
      - name: Run sccache-cache
        uses: mozilla-actions/sccache-action@v0.0.3
      - name: Build
        run: |
          cargo build --verbose ${{ matrix.features }}
          cargo test --tests --examples --verbose ${{ matrix.features }}

  linux:
    env:
      RUSTC_WRAPPER: "sccache"
      CCACHE: sccache
      SCCACHE_GHA_ENABLED: "true"
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        features: ["--features streams"]
    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@stable
      - name: Install deps
        run: |
          sudo apt install llvm -y
      - name: Run sccache-cache
        uses: mozilla-actions/sccache-action@v0.0.3
      - name: Build
        run: |
          cargo build --verbose ${{ matrix.features }}
          cargo test --tests --examples --verbose ${{ matrix.features }}
      - name: Check wrappers integrity
        # we generate wrappers only without debugmozjs
        if: ${{ matrix.features == '--features streams' }}
        run: |
          bash ./mozjs/src/generate_wrappers.sh
          git diff --quiet --exit-code

  windows:
    runs-on: windows-latest
    strategy:
      fail-fast: false
      matrix:
        features: ["--features streams"]
        target: ["x86_64-pc-windows-msvc"]
    env:
      LINKER: "lld-link.exe"
      CC: "clang-cl"
      CXX: "clang-cl"
      MOZTOOLS_PATH: "${{ github.workspace }}\\target\\dependencies\\moztools-4.0"
      CCACHE: sccache
      SCCACHE_GHA_ENABLED: "true"
    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@stable
        with:
          targets: ${{ matrix.target }}
      - name: Install deps
        run: |
          curl -SL "https://github.com/servo/servo-build-deps/releases/download/msvc-deps/moztools-4.0.zip" --create-dirs -o target/dependencies/moztools.zip
          cd target/dependencies && unzip -qo moztools.zip -d .
      - name: Run sccache-cache
        uses: mozilla-actions/sccache-action@v0.0.3
      - name: Build Windows
        shell: cmd
        run: |
          cargo build --verbose --target ${{ matrix.target }} ${{ matrix.features }}
          cargo test --tests --examples --verbose --target ${{ matrix.target }} ${{ matrix.features }}

  build_result:
    name: Result
    runs-on: ubuntu-latest
    needs:
      ["linux", "mac", "windows"]
    if: ${{ always() }}
    steps:
      - name: Mark the job as successful
        if: ${{ !contains(needs.*.result, 'failure') && !contains(needs.*.result, 'cancelled') }}
        run: exit 0
      - name: Mark the job as unsuccessful
        if: ${{ contains(needs.*.result, 'failure') || contains(needs.*.result, 'cancelled') }}
        run: exit 1
